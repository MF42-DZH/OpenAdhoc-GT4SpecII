













module OptionProject::ReplayRoot
{
    module ReplayMode
    {
        static NORMAL = 0;
        static DIVE = 1;
    }

    static ReplayModeString = ["NORMAL", "DIVE"];

    function open(context)
    {
        start_page(context, ROOT);
    }

    function close(context)
    {
        start_page(context, OptionRoot);
    }

    function reflect(context)
    {
        var option = main::game.option;
        Pane::Mode::OptionMenu.setIndex(context,ReplayMode[option.replay_mode]);
        Pane::Info::OptionMenu.setIndex(context, 1 - option.replay_display_enable);
        Pane::McSlot::OptionMenu.setIndex(context, 1 - option.replay_memory_card_slot);
    }

    function apply()
    {
        main::game.setNeedSave();
        var option = main::game.option;

        option.replay_mode = ReplayModeString[Pane::Mode::OptionMenu.index];
        option.replay_display_enable = 1 - Pane::Info::OptionMenu.index;
        option.replay_memory_card_slot = 1 - Pane::McSlot::OptionMenu.index;
    }

    function onInitialize(context)
    {
        Pane::McSlot::label.adjustScale();

        ROOT.setFocus(Pane::Mode::OptionMenu);
        reflect(context);
    }

    function onFinalize()
    {

    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        close(context);
        return STATE_YIELD;
    }
}

module OptionProject::ReplayRoot::Pane::Buttons::Cancel
{
    function onActivate(context)
    {
        main::sound.play("ok");
        close(context);
        return STATE_YIELD;
    }
}

module OptionProject::ReplayRoot::Pane::Buttons::OK
{
    function onActivate(context)
    {
        main::sound.play("ok");
        apply();
        close(context);
        return STATE_YIELD;
    }
}