













module OptionProject::SteeringRoot
{
    module AssistType
    {
        static AMATEUR = 0;
        static PROFESSIONAL = 1;
        static SIMULATION = 2;
    }

    static AssistTypeString = ["AMATEUR", "PROFESSIONAL", "SIMULATION"];

    function open(context)
    {
        start_page(context, ROOT);
    }

    function close(context)
    {
        start_page(context, OptionRoot);
    }

    function reflect(context)
    {
        var option = main::game.option;
        Pane::ActiveSteering1::OptionMenu.setIndex(context, 1 - option.active_steering_1p);
        Pane::ActiveSteering2::OptionMenu.setIndex(context, 1 - option.active_steering_2p);
        Pane::Assist1::OptionMenu.setIndex(context, AssistType[option.steering_assist_1p]);
        Pane::Assist2::OptionMenu.setIndex(context, AssistType[option.steering_assist_2p]);

        Pane::PowerAssist1::OptionMenu.setIndex(context, 1 - option.getDeviceFeedback("CHEETAH", "POWER_ASSIST", 0));
        Pane::PowerAssist2::OptionMenu.setIndex(context, 1 - option.getDeviceFeedback("CHEETAH", "POWER_ASSIST", 1));
        Pane::Feedback1::OptionMenu.setIndex(context, option.getDeviceFeedback("CHEETAH", "POWER", 0));
        Pane::Feedback2::OptionMenu.setIndex(context, option.getDeviceFeedback("CHEETAH", "POWER", 1));
    }

    function apply(context)
    {
        main::game.setNeedSave();
        var option = main::game.option;

        option.active_steering_1p = 1 - Pane::ActiveSteering1::OptionMenu.index;
        option.active_steering_2p = 1 - Pane::ActiveSteering2::OptionMenu.index;
        option.steering_assist_1p = AssistTypeString[Pane::Assist1::OptionMenu.index];
        option.steering_assist_2p = AssistTypeString[Pane::Assist2::OptionMenu.index];

        option.setDeviceFeedback(1 - Pane::PowerAssist1::OptionMenu.index, "CHEETAH", "POWER_ASSIST", 0);
        option.setDeviceFeedback(1 - Pane::PowerAssist2::OptionMenu.index, "CHEETAH", "POWER_ASSIST", 1);
        option.setDeviceFeedback(Pane::Feedback1::OptionMenu.index, "CHEETAH", "POWER", 0);
        option.setDeviceFeedback(Pane::Feedback2::OptionMenu.index, "CHEETAH", "POWER", 1);
    }

    function onInitialize(context)
    {
        var region = main::menu::MSystem::GetRegionCode();
        if (region == "us" || region == "uk")
        {
            Pane::Assist1::label.text = context.translate(ROOT, "LabelAssistBoth1");
            Pane::Assist2::label.text = context.translate(ROOT, "LabelAssistBoth2");
        }
        else if (region == "kr")
        {
            Pane::Assist1::label.text = context.translate(ROOT, "LabelAssistDrivingForceOnly1");
            Pane::Assist2::label.text = context.translate(ROOT, "LabelAssistDrivingForceOnly2");
        }
        else
        {
            Pane::Assist1::label.text = context.translate(ROOT, "LabelAssistGTForceOnly1");
            Pane::Assist2::label.text = context.translate(ROOT, "LabelAssistGTForceOnly2");
        }

        Pane::ActiveSteering1::label.adjustScale();
        Pane::ActiveSteering2::label.adjustScale();
        Pane::Assist1::label.adjustScale();
        Pane::Assist2::label.adjustScale();
        Pane::Assist1::OptionMenu::popup::vbox::Amateur::label.adjustScale();
        Pane::Assist1::OptionMenu::popup::vbox::Professional::label.adjustScale();
        Pane::Assist1::OptionMenu::popup::vbox::Simulation::label.adjustScale();
        Pane::Assist2::OptionMenu::popup::vbox::Amateur::label.adjustScale();
        Pane::Assist2::OptionMenu::popup::vbox::Professional::label.adjustScale();
        Pane::Assist2::OptionMenu::popup::vbox::Simulation::label.adjustScale();
        Pane::PowerAssist1::label.adjustScale();
        Pane::PowerAssist2::label.adjustScale();
        Pane::Feedback1::label.adjustScale();
        Pane::Feedback2::label.adjustScale();

        SteeringRoot.setFocus(Pane::ActiveSteering1::OptionMenu);
        reflect(context);
    }

    function onFinalize(context) { }

    function onCancel(context)
    {
        main::sound.play("cancel");
        close(context);
        return STATE_YIELD;
    }
}

module OptionProject::SteeringRoot::Pane::Assist1::OptionMenu
{
    function onFocusEnter(context)
    {
        var region = main::menu::MSystem::GetRegionCode();
        if (region == "us" || region == "uk")
        {
            SteeringRoot::ToolTip::tip.value += context.translate(ROOT, "AssistBoth");
        }
        else if (region == "kr")
        {
            SteeringRoot::ToolTip::tip.value += context.translate(ROOT, "AssistDrivingForceOnly");
        }
        else
        {
            SteeringRoot::ToolTip::tip.value += context.translate(ROOT, "AssistGTForceOnly");
        }
    }
}

module OptionProject::SteeringRoot::Pane::Assist2::OptionMenu
{
    function onFocusEnter(context)
    {
        var region = main::menu::MSystem::GetRegionCode();
        if (region == "us" || region == "uk")
        {
            SteeringRoot::ToolTip::tip.value += context.translate(ROOT, "AssistBoth");
        }
        else if (region == "kr")
        {
            SteeringRoot::ToolTip::tip.value += context.translate(ROOT, "AssistDrivingForceOnly");
        }
        else
        {
            SteeringRoot::ToolTip::tip.value += context.translate(ROOT, "AssistGTForceOnly");
        }
    }
}

module OptionProject::SteeringRoot::Pane::Buttons::Cancel
{
    function onActivate(context)
    {
        main::sound.play("ok");
        close(context);
        return STATE_YIELD;
    }
}

module OptionProject::SteeringRoot::Pane::Buttons::OK
{
    function onActivate(context)
    {
        main::sound.play("ok");
        apply(context);
        close(context);
        return STATE_YIELD;
    }
}