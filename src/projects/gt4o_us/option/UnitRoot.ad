module OptionProject::UnitRoot
{
    module VelocityType 
    {
        static KMPH = 0;
        static MPH = 1;
    }

    module PowerType 
    {
        static PS = 0;
        static HP = 1;
        static BHP = 2;
        static CH = 3;
        static KW = 4;
        static CV = 5;
        static PF = 6;
    }

    module TorqueType
    {
        static KGFM = 0;
        static FTLB = 1;
        static NM = 2;
    }

    static VelocityString = ["KMPH", "MPH"];
    static PowerString = ["PS", "HP", "BHP", "CH", "KW", "CV", "PF"];
    static TorqueString = ["KGFM", "FTLB", "NM"];

    function open(context)
    {
        start_page(context, ROOT);
    }

    function close(context)
    {
        start_page(context, OptionRoot);
    }

    function reflect(context)
    {
        var option = main::game.option;

        Pane::Velocity::OptionMenu.setIndex(context, VelocityType[option.unit_velocity]);
        Pane::Power::OptionMenu.setIndex(context, PowerType[option.unit_power]);
        Pane::Torque::OptionMenu.setIndex(context, TorqueType[option.unit_torque]);
    }

    function apply(context)
    {
        main::game.setNeedSave();
        
        var option = main::game.option;
        option.unit_velocity = VelocityString[Pane::Velocity::OptionMenu.index];
        option.unit_power = PowerString[Pane::Power::OptionMenu.index];
        option.unit_torque = TorqueString[Pane::Torque::OptionMenu.index];

        option.apply();
    }

    function onInitialize(context)
    {
        UnitRoot.setFocus(Pane::Velocity::OptionMenu);

        reflect(context);
    }

    function onFinalize(context) { }

    function onCancel(context, event, item)
    {
        main::sound.play("cancel");
        close(context);
        return EVENTRESULT_FILTER;
    }
}

module OptionProject::UnitRoot::Pane::Buttons::Cancel
{
    function onActivate(context)
    {
        main::sound.play("ok");
        close(context);
        return EVENTRESULT_FILTER;
    }
}

module OptionProject::UnitRoot::Pane::Buttons::OK
{
    function onActivate(context)
    {
        main::sound.play("ok");
        apply(context);
        close(context);
        return EVENTRESULT_FILTER;
    }
}