











module GTmodeProject::DescriptionPopup
{
    function setMoveActor(widget)
    {
        var actor = main::menu::MMoveActor(widget, widget.x, 480.0);
        widget.actor = actor;
        widget.actor.ratio = 0.2;
    }

    function setFadeActorRoot()
    {
        var actor = main::menu::MFadeActor(ROOT, 1.0);
        actor.repeat = false;
        actor.period = 0.5;
        ROOT.actor = actor;
    }

    setMoveActor(Pane);
    setFadeActorRoot();

    static orig_x = Pane["Description"]["label"].scale_x;
    static orig_y = Pane["Description"]["label"].scale_y;

    function open(context, desc, title)
    {
        if (title != nil)
            Pane["Title"]["label"].text = title;
        Pane["Description"]["label"].text = desc;

        if (!wide)
        {
            // Only if it hasn't already been scaled
            if (Pane["Description"]["label"].scale_x == orig_x)
            {
                Pane["Description"]["label"].scale_x = orig_x * 0.875;
                Pane["Description"]["label"].scale_y = orig_y * 0.875;
            }
        }
        else 
        {
            Pane["Description"]["label"].scale_x = orig_x * 0.95;
            Pane["Description"]["label"].scale_x = orig_y * 0.95;
        }

        ROOT.setFocus(nil);
        Pane.actor.destinationY = 480.0;
        Pane.actor.out = true;
        Pane.actor.warp();

        ROOT.actor.out = true;
        ROOT.actor.warp();

        context.pushPage(ROOT);
        Pane.actor.out = false;
        ROOT.actor.out = false;
        ROOT.setFocus(Pane::Button::Close);
    }

    function close(context)
    {
        ROOT.setFocus(nil);
        Pane.actor.destinationY = 480.0;
        Pane.actor.out = true;
        DescriptionPopup.actor.out = true;
        context.sync(0.25);

        context.closePage(ROOT);
    }

    function setupSlider(slider)
    {
        slider["label"].text = slider.index;

        var popup = slider["popup"];
        popup["pinch"]["value"].text = slider.index;
        popup["min"].adjustScale();
        popup["max"].adjustScale();
    }

    function onInitialize(context)
    {
        Pane.minimum_height = false;
    }

    function onFinalize(context) { }

    function onCancel(context, event, item)
    {
        main::sound.play("cancel");
        close(context);
        return EVENTRESULT_FILTER;
    }
}

module GTmodeProject::DescriptionPopup::Pane::Button::Close
{
    function onActivate(context, event, item)
    {
        main::sound.play("ok");
        ROOT.close(context);

        return EVENTRESULT_FILTER;
    }
}