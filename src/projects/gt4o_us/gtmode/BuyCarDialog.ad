//---------------------------------------------------------------------------------------
// BuyCarDialog.ad
//
// Car modal with car specs & details when buying a car
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

module GTmodeProject::BuyCarDialog
{
    static result;
    static debug_free = false;
    static current_car;
    static current_gcar;
    static original_y = Pane.y;
    static catalog;
    static sell;
    static showroom;
    static discounted_price;

    static current_car_available = true;

    function setMoveActor(widget)
    {
        var actor = main::menu::MMoveActor(widget, widget.x, 480.0);
        widget.actor = actor;
        widget.actor.ratio = 0.2;
    }

    function setFadeActorRoot()
    {
        var actor = main::menu::MFadeActor(ROOT, 1.0);
        actor.repeat = false;
        actor.period = 0.5;
        ROOT.actor = actor;
    }

    setMoveActor(Pane);
    setFadeActorRoot();

    module CarEngineInfo {}

    function onInitialize(context)
    {
        var cg = catalog ? main::menu::MCarGarage(current_car) : current_gcar;
        var engineName = "";
        var engineLabel = cg.getCarLabel() + "_eng";

        CarEngineInfo.load("/projects/specii/engineinfo");

        logInfo(engineLabel);

        if (CarEngineInfo::CarEngineNames.defined(engineLabel))
            engineName = CarEngineInfo::CarEngineNames[engineLabel];

        Pane::VBox::Title::label.text = cg.short_name;
        Pane::VBox::Line0::th.text = context.translate(ROOT, "Engine");
        Pane::VBox::Line0::td.text = engineName;
        Pane::VBox::Line0::td.adjustScale();
        Pane::VBox::Line1::th.text = context.translate(ROOT, "Type");
        Pane::VBox::Line1::td.text = cg.getCatEngineType() + ": " + cg.getCatEngineCam();
        Pane::VBox::Line2::th.text = context.translate(ROOT, "Displacement");
        Pane::VBox::Line2::td.text = cg.getCatDisplacement();
        Pane::VBox::Line3::th.text = context.translate(ROOT, "Power");
        Pane::VBox::Line3::td.scale_x = 0.9;
        Pane::VBox::Line3::td.scale_y = 0.9;
        Pane::VBox::Line3::td.text = catalog ? cg.getCatPs("%d%s/%s%s") : cg.getCurrentPs("%d%s/%s%s");
        Pane::VBox::Line3::td.adjustScale();
        Pane::VBox::Line4::th.text = context.translate(ROOT, "Torque");
        Pane::VBox::Line4::td.scale_x = 0.9;
        Pane::VBox::Line4::td.scale_y = 0.9;
        Pane::VBox::Line4::td.text = catalog ? cg.getCatTq("%.2t%s/%s%s") : cg.getCurrentTq("%.2t%s/%s%s");
        Pane::VBox::Line4::td.adjustScale();
        Pane::VBox::Line5::th.text = context.translate(ROOT, "Dimension_Weight");
        Pane::VBox::Line6::th.text = context.translate(ROOT, "Dimension");
        Pane::VBox::Line6::td.text = "%sx%sx%s".format(cg.getCatLength(), cg.getCatWidth(), cg.getCatHeight());
        Pane::VBox::Line9::th.text = context.translate(ROOT, "Mass");
        Pane::VBox::Line9::td.text = catalog ? cg.getCatMs("%d%s") : cg.getCurrentMs("%d%s");
        Pane::VBox::Line10::th.text = context.translate(ROOT, "Chassis");

        var train = cg.getDTrainType();
        train = context.translate(ROOT, "DriveTrainName", train);
        Pane::VBox::Line11::th.text = context.translate(ROOT, "DriveTrain");
        Pane::VBox::Line11::td.text = train;

        var price = 0;
        if (sell)
        {
            Pane::VBox::Option::Line12.visible = true;
            Pane::VBox::Option::Price.visible = false;
            Pane::VBox::Option::Line12::th.text = context.translate(ROOT, "Mileage");
            Pane::VBox::Option::Line12::td.text = cg.getOdometer("%.1t%s");
            Pane::VBox::Money::th.text = context.translate(ROOT, "Value");
            price = cg.getUsedSellPrice();
            Pane::VBox::Money::td.text = "Cr. " + main::menu::MUtility::GetMoneyString(price); 
            main::game.incMoney(price);
            Pane::VBox::Money::td2.text = "Cr. " + main::game.money;
            main::game.incMoney(-price); 
        }
        else
        {
            Pane::VBox::Option::Line12.visible = false;
            Pane::VBox::Option::Price.visible = true;
            Pane::VBox::Option::Price::th.text = context.translate(ROOT, "Price");
            price = nil;

            if (catalog)
                price = main::menu::MCarData::GetPrice(cg.getCarLabel());
            else
                price = cg.getUsedPrice();

            if (discounted_price != nil)
                price = discounted_price;

            if (showroom && main::menu::MCarData::NotForSell(cg.getCarLabel()) && !current_car_available)
            {
                Pane::VBox::Option::Price::td.text = context.translate(ROOT, "not for sell");
                Pane::VBox::Money::td2.text = "--"; 
            }
            else
            {
                Pane::VBox::Option::Price::td.text = "Cr. " + main::menu::MUtility::GetMoneyString(price);
                main::game.incMoney(-price);
                Pane::VBox::Money::td2.text = "Cr. " + main::game.money;
                main::game.incMoney(price);    
            }

            Pane::VBox::Option::Price::td.adjustScale();
            Pane::VBox::Money::th.text = context.translate(ROOT, "YourMoney");
            Pane::VBox::Money::td.text = "Cr. " + main::game.money;
            Pane::VBox::Money::td_red.text = "Cr. " + main::game.money;
        }

        if (sell)
        {
            Pane::VBox::Buttons::Buy::TextFace.text = context.translate(ROOT, "Sell");
            ROOT.setFocus(Pane::VBox::Buttons::Cancel);
        }
        else
        {
            Pane::VBox::Buttons::Buy::TextFace.text = context.translate(ROOT, "buy");
            ROOT.setFocus(Pane::VBox::Buttons::Buy);
        }

        if (!sell)
        {
            if (discounted_price != nil)
                price = discounted_price;
            var enough = main::game.isEnoughMoney(price);
            var can_buy = false;
            if (!showroom && enough) // In UCD and can afford
                can_buy = true;
            if (showroom && enough && (!main::menu::MCarData::NotForSell(cg.getCarLabel()) || current_car_available))
                can_buy = true;
            //var can_buy = enough && showroom && !main::menu::MCarData::NotForSell(cg.getCarLabel());

            if (!can_buy)
                Pane::VBox::Money::td2.text = "--"; 

            Pane::VBox::Money.active = !enough;
            Pane::VBox::Buttons::Buy.insensitive = !can_buy;
            logInfo("can_buy == %{can_buy}");
        }
        else
        {
            Pane::VBox::Money.active = false;
            Pane::VBox::Buttons::Buy.insensitive = false;
        }

        ROOT.setFocus(Pane::VBox::Buttons::Cancel);
    }

    function open(context, car, sellmode, catalogmode, showroommode, available, discount_price)
    {
        if (sellmode == nil)
            sellmode = false;

        if (catalogmode == nil)
            catalogmode = false;

        if (showroommode == nil)
            showroommode = false;

        discounted_price = discount_price == nil ? nil : discount_price;
        BuyCarRoot::discount_price = discounted_price;

        sell = sellmode;
        catalog = catalogmode;
        showroom = showroommode;

        //openConfirmDialog(context, 1, "Available: %{available}\nShowroom: %{showroom}");

        if (available != nil)
        {
            // If in the new car dealer *and* the car has been unlocked by event completion
            if (!showroom || (showroom && available))
                current_car_available = true;
            else
                current_car_available = false;
        }

        context.cursor_visible = false;

        if (catalogmode)
        {
            current_gcar = nil;
            current_car = car;
        }
        else
        {
            current_gcar = car;
            current_car = nil;
        }

        Pane.actor.destinationY = 480.0;
        Pane.actor.out = true;
        Pane.actor.warp();

        ROOT.actor.out = true;
        ROOT.actor.warp();
        context.pushPage(ROOT);

        Pane.actor.out = false;
        ROOT.actor.out = false;
        context.sync(0.5);
        context.cursor_visible = true;
        context.getUpdateContext().enterEventLoop();

        sell = nil;
        catalog = nil;
        current_car = nil;
        current_gcar = nil;
        return result;
    }

    function close(context)
    {
        context.cursor_visible = false;

        if (result)
            Pane.actor.destinationY = -Pane.h;
        else
            Pane.actor.destinationY = 480.0;

        Pane.actor.out = true;
        ROOT.actor.out = true;
        context.sync(0.5);
        context.closePage(ROOT);

        context.getUpdateContext().leaveEventLoop();
        context.cursor_visible = true;
        CarEngineInfo.clearStatic();
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        result = false;
        close(context);
        return EVENTRESULT_FILTER;
    }

    function onKeyPress(context, event)
    {
        return EVENTRESULT_CONTINUE;
    }
}

module GTmodeProject::BuyCarDialog::Pane::VBox::Buttons::Cancel
{
    function onActivate(context)
    {
        main::sound.play("cancel");
        result = false;
        close(context);
        return EVENTRESULT_FILTER;
    }
}

module GTmodeProject::BuyCarDialog::Pane::VBox::Buttons::Buy
{
    function onActivate(context)
    {
        if (!sell)
            main::sound.play("buy");
        else
            main::sound.play("ok");
            
        result = true;
        close(context);
        return EVENTRESULT_FILTER;
    }
}