//---------------------------------------------------------------------------------------
// LicenseRoot.ad
//
// License Category selection root
// 
//---------------------------------------------------------------------------------------


//---------------------------------------------------------------------------------------
// module
//---------------------------------------------------------------------------------------

#define LICENSE_CATEGORY_TEST_COUNT 16

#define LICENSE_B "l0b"
#define LICENSE_A "l0a"
#define LICENSE_IB "lib"
#define LICENSE_IA "lia"
#define LICENSE_S "l0s"

module GTmodeProject::LicenseRoot
{
    l0b::corn.actor = main::menu::MChaseActor(l0b::corn);
    l0a::corn.actor = main::menu::MChaseActor(l0a::corn);
    lib::corn.actor = main::menu::MChaseActor(lib::corn);
    lia::corn.actor = main::menu::MChaseActor(lia::corn);
    l0s::corn.actor = main::menu::MChaseActor(l0s::corn);

    function onInitialize(context)
    {
        enterPage(context, ROOT, "LicenseTitle");

        l0b::Passed.visible = main::game.race_record.isLicensePassed(LICENSE_B);
        l0a::Passed.visible = main::game.race_record.isLicensePassed(LICENSE_A);
        lib::Passed.visible = main::game.race_record.isLicensePassed(LICENSE_IB);
        lia::Passed.visible = main::game.race_record.isLicensePassed(LICENSE_IA);
        l0s::Passed.visible = main::game.race_record.isLicensePassed(LICENSE_S);

        focus_last(ROOT, ROOT);
    }

    function onFinalize(context)
    {
        leavePage(context, ROOT);
    }

    // Pass All Licenses code - Select, R1, Select, R1, Select, L2, L2, R2, R2, L1, Select, L1, Select
    static craft_command = [
        //PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_R1,
        //PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_R1,
        //PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_L2,
        PS2_PAD_CTRL_L2,
        PS2_PAD_CTRL_R2,
        PS2_PAD_CTRL_R2,
        PS2_PAD_CTRL_L1,
        //PS2_PAD_CTRL_SELECT,
        PS2_PAD_CTRL_L1,
        //PS2_PAD_CTRL_SELECT,
    ];

    if (is_debug)
    {
        craft_command = [
            PS2_PAD_CTRL_R1
        ];
    }

    function doCraft(context)
    {
        var fwidget = ROOT.getFocusedWidget();
        if (fwidget == nil)
            return;

        var category = fwidget.name;
        for (var i = 0; i < LICENSE_CATEGORY_TEST_COUNT; i++)
        {
            var race_code = category + "%04d".format(i + 1);
            var unit = main::game.race_record.getUnit(race_code);
            unit.update("license", "gold");
            main::game.calendar.putRunLicenseEvent("jp" + race_code, unit.result, "", 10000);
        }
    }

    function onKeyPress(context, event)
    {
        switch (event.keysym)
        {
            case PS2_PAD_CTRL_SELECT:
                main::sound.play("ok");
                QuickMenuPopup::open(context);
                return EVENTRESULT_FILTER;
        }

        if (craft(context, event, craft_command, doCraft))
            return EVENTRESULT_FILTER;

        return EVENTRESULT_CONTINUE;
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        set_last_focus("License");
        start_page(context, TopRoot);
        return EVENTRESULT_FILTER;
    }
}

module GTmodeProject::LicenseRoot::l0b
{
    function onFocusEnter(context)
    {
        l0b::corn.actor.doStart();
        return EVENTRESULT_FILTER;
    }

    function onFocusLeave(context)
    {
        l0b::corn.actor.doStop();
        return EVENTRESULT_FILTER;
    }

    function onActivate(context)
    {
        main::sound.play("ok");
        main::game.menuPush(LICENSE_B);
        start_page(context, LicenseDetailRoot);
        return EVENTRESULT_FILTER;
    }
}

module GTmodeProject::LicenseRoot::l0a
{
    function onFocusEnter(context)
    {
        l0a::corn.actor.doStart();
        return EVENTRESULT_FILTER;
    }

    function onFocusLeave(context)
    {
        l0a::corn.actor.doStop();
        return EVENTRESULT_FILTER;
    }

    function onActivate(context)
    {
        if (!checkLicense(context, ROOT, LICENSE_B))
            return EVENTRESULT_FILTER;
            
        main::sound.play("ok");
        main::game.menuPush(LICENSE_A);
        start_page(context, LicenseDetailRoot);
        return EVENTRESULT_FILTER;
    }
}

module GTmodeProject::LicenseRoot::lib
{
    function onFocusEnter(context)
    {
        lib::corn.actor.doStart();
        return EVENTRESULT_FILTER;
    }

    function onFocusLeave(context)
    {
        lib::corn.actor.doStop();
        return EVENTRESULT_FILTER;
    }
    
    function onActivate(context)
    {
        if (!checkLicense(context, ROOT, LICENSE_A))
            return EVENTRESULT_FILTER;

        main::sound.play("ok");
        main::game.menuPush(LICENSE_IB);
        start_page(context, LicenseDetailRoot);
        return EVENTRESULT_FILTER;
    }
}

module GTmodeProject::LicenseRoot::lia
{
    function onFocusEnter(context)
    {
        lia::corn.actor.doStart();
        return EVENTRESULT_FILTER;
    }

    function onFocusLeave(context)
    {
        lia::corn.actor.doStop();
        return EVENTRESULT_FILTER;
    }
    
    function onActivate(context)
    {
        if (!checkLicense(context, ROOT, LICENSE_IB))
            return EVENTRESULT_FILTER;

        main::sound.play("ok");
        main::game.menuPush(LICENSE_IA);
        start_page(context, LicenseDetailRoot);
        return EVENTRESULT_FILTER;
    }
}

module GTmodeProject::LicenseRoot::l0s
{
    function onFocusEnter(context)
    {
        l0s::corn.actor.doStart();
        return EVENTRESULT_FILTER;
    }

    function onFocusLeave(context)
    {
        l0s::corn.actor.doStop();
        return EVENTRESULT_FILTER;
    }
    
    function onActivate(context)
    {
        if (!checkLicense(context, ROOT, LICENSE_IA))
            return EVENTRESULT_FILTER;

        main::sound.play("ok");
        main::game.menuPush(LICENSE_S);
        start_page(context, LicenseDetailRoot);
        return EVENTRESULT_FILTER;
    }
}