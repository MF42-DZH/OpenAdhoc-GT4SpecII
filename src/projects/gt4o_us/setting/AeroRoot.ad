module SettingProject::AeroRoot
{
    static range_data = nil;

    function apply()
    {
        if (!Pane::DownForce::slider_f.insensitive)
            current_car.setRacingModifySetting(0, Pane::DownForce::slider_f.index);

        if (!Pane::DownForce::slider_r.insensitive)
            current_car.setRacingModifySetting(1, Pane::DownForce::slider_r.index);  
    }

    function reflect()
    {
        var val = current_car.getRacingModifySetting(0);
        initSlider(Pane::DownForce::slider_f, val, range_data[0], range_data[1]);

        val = current_car.getRacingModifySetting(1);
        initSlider(Pane::DownForce::slider_r, val, range_data[2], range_data[3]);
    }

    function onInitialize(context)
    {
        ROOT.setFocus(Pane::Buttons::Cancel);
        range_data = current_car.getRacingModifyRange();
        reflect();
    }

    function onFinalize(context)
    {
        range_data = nil;
    }

    function onCancel(context)
    {
        main::sound.play("cancel");
        
        start_page(context, SettingRoot);

        return EVENTRESULT_FILTER;
    }
}

module SettingProject::AeroRoot::Pane::DownForce::slider_f
{
    function onValueChanged(context, index)
    {
        setupSlider(slider_f);
    }

    function onStepChanged(context)
    {
        on_step_changed(slider_f, 11.0);
    }
}

module SettingProject::AeroRoot::Pane::DownForce::slider_r
{
    function onValueChanged(context, index)
    {
        setupSlider(slider_r);
    }

    function onStepChanged(context)
    {
        on_step_changed(slider_r, 11.0);
    }
}

module SettingProject::AeroRoot::Pane::Buttons::Cancel
{
    function onActivate(context)
    {
        main::sound.play("ok");

        start_page(context, SettingRoot);

        return EVENTRESULT_FILTER;
    }
}

module SettingProject::AeroRoot::Pane::Buttons::OK
{
    function onActivate(context)
    {
        main::sound.play("ok");

        apply();
        start_page(context, SettingRoot);

        return EVENTRESULT_FILTER;
    }
}